install.packages('devtools')
devtools::install_github('IRkernel/IRkernel')
# or devtools::install_local('IRkernel-master.tar.gz')
IRkernel::installspec()  # to register the kernel in the current R installation
install.packages("corrplot")
library(corrplot)
setwd("~/GitHub/csc478-project")
data<-read.csv('processed_nodummies.csv')
corrplot(data, method="ellipse",order='AOE')
corrplot(cor(data), method="ellipse",order='AOE')
View(data)
corrplot(data[45:53], method="ellipse",order='AOE')
data[45:53]
corrplot(corr(data[45:53]), method="ellipse",order='AOE')
library(corrplot)
corrplot(corr(data[45:53]), method="ellipse",order='AOE')
corrplot(cor(data[45:53]), method="ellipse",order='AOE')
View(data)
corrplot(cor(data), method="ellipse",order='AOE')
View(data)
data[2]
data[3]
data_cont<-data[3,9,10,11,26,27,28,29,31,33:53]
data_cont<-data[(3,9,10,11,26,27,28,29,31,33:53)]
data_cont<-data[c(3,9,10,11,26,27,28,29,31,33:53)]
corrplot(cor(data_cont), method="ellipse",order='AOE')
View(data_cont)
View(data)
data_cont<-data[c(3,9,10,11,26,27,28,29,32:53)]
data_cont<-data[c(3,9,10,11,26,27,28,29,32:53)]
corrplot(cor(data_cont), method="ellipse",order='AOE')
View(data_cont)
data_cont<-data[c(3,9,10,11,26,27,28,29,31,34:53)]
corrplot(cor(data), method="ellipse",order='AOE')
corrplot(cor(data_cont), method="ellipse",order='AOE')
corrplot(cor(data_cont), method="ellipse",order='AOE')
library(psych)
install.packages("psych")
library(psych)
pca = psych::principal(data_cont, rotate="varimax", nfactors=10, scores=TRUE)
print(pca$loadings, cutoff=.4)
pca = psych::principal(data_cont, rotate="varimax", nfactors=10, scores=TRUE,order(decreasing=False))
pca = psych::principal(data_cont, rotate="varimax", nfactors=10, scores=TRUE,order(decreasing = FALSE ))
pca = psych::principal(data_cont, rotate="varimax", nfactors=10, scores=TRUE, order(decreasing = TRUE ))
print(pca$loadings, cutoff=.4)
pca = psych::principal(data_cont, rotate="varimax", nfactors=10, scores=TRUE)
print(pca$loadings, cutoff=.4)
pca = psych::principal(data_cont, nfactors=10, scores=TRUE)
pca = psych::principal(data_cont, nfactors=10, scores=TRUE)
print(pca$loadings, cutoff=.4)
